@page
@model Elderson.Pages.ISR.Users.ChatModel
@using Microsoft.AspNetCore.Http;
@{ Layout = "Shared/_LayoutITSupport";
    ViewData["Title"] = "Chat page";
    ViewData["Header"] = "CHAT";
    ViewData["Breadcrumb"] = "Contact"; }

<style>
    .left {
        width: 300px;
        height: 700px;
        margin-right:30px;
    }

    .right {
        width: 980px;
        height: 700px;
    }

    .main-section small {
        font-size: 12px;
    }

    .main-section h3, .main-section h5 {
        margin: 0px;
    }

    .main-section {
        background-color: #fff;
        margin: auto;
    }

    .head-section {
        clear: both;
        overflow: visible;
        width: 100%;
        height: 75px;
    }

    .headLeft-section {
        width: 100%;
        float: left;
        border-right: 1px solid #E6E6E6;
    }

    .headLeft-sub {
        padding: 15px;
    }

    .left-section input {
        width: 60%;
        border-radius: 0px;
        border: 1px solid #E6E6E6;
        padding: 7px;
    }

    .left-section button {
        background: #009EF7;
        color: #fff;
        border: 1px solid #E6E6E6;
        padding: 7px 15px;
    }

    .headRight-section {
        width: 100%;
        float: left;
    }

    .headRight-sub {
        padding: 30px 25px 0px 15px;
        height: 75px;
        z-index: 3;
    }

    .body-section {
        clear: both;
        overflow: hidden;
        width: 100%;
    }

    .left-section {
        width: 100%;
        float: left;
        height: 500px;
        border-right: 1px solid #E6E6E6;
        background-color: #FFF;
        z-index: 1;
        position: relative;
    }

        .left-section ul {
            padding: 0px;
            margin: 0px;
            list-style: none;
        }

            .left-section ul li {
                padding: 15px 0px;
                cursor: pointer;
                border-bottom: 1px solid #E6E6E6;
            }

                .left-section ul li.active {
                    background: #009EF7;
                    color: #fff;
                    position: relative;
                }

    .mCustomScrollBox, .mCSB_container {
        overflow: unset !important;
    }

    .left-section ul li.active .desc .time {
        color: #fff;
    }

    .left-section ul li.active:before {
        position: absolute;
        content: '';
        right: -10px;
        border: 5px solid #009EF7;
        top: 0px;
        bottom: 0px;
        border-radius: 0px 3px 3px 0px;
    }

    .left-section ul li.active:after {
        position: absolute;
        content: "";
        bottom: 0px;
        right: 0px;
        left: auto;
        width: 100%;
        top: 0px;
        -webkit-box-shadow: -8px 4px 10px #a1a1a1;
        -moz-box-shadow: -8px 4px 10px #a1a1a1;
        box-shadow: -8px 4px 10px #a1a1a1;
    }

    .left-section .chatList {
        overflow: hidden;
        height:40px;
    }

        .left-section .chatList .desc {
            width: calc(100% - 60px);
            margin:16px;
        }

            .left-section .chatList .desc h5 {
                margin-top: 6px;
                line-height: 5px;
            }

            .left-section .chatList .desc .time {
                position: absolute;
                right: 15px;
                color: #c1c1c1;
            }

    .right-section {
        width: 100%;
        float: left;
        height: 100%;
        background-color: #E6EBF0;
        position: relative;
    }

    .message {
        height: calc(100% - 68px);
        font-family: sans-serif;
        padding-bottom: 50px;
    }

        .message ul {
            padding: 0px;
            list-style: none;
            width: 100%;
            height: 590px;
            overflow: scroll;
        }

            .message ul li {
                position: relative;
                width: auto;
                padding: 10px 0px 0px;
                clear: both;
            }

                .message ul li:last-child {
                    margin-bottom: 20px;
                }

                .message ul li.msg-left {
                    float: left;
                    max-width: 250px;
                }

                    .message ul li.msg-left .msg-desc {
                        margin-left: 25px;
                        margin-right: 10px;
                        font-size: 14px;
                        background: #F2F2F7;
                        padding: 10px 60px 10px 15px;
                        border-radius: 5px 5px 5px 0px;
                        position: relative;
                        line-height:1.3;
                    }

                        .message ul li.msg-left .msg-desc:before {
                            position: absolute;
                            content: '';
                            border: 10px solid transparent;
                            border-bottom-color: #F2F2F7;
                            bottom: 0px;
                            left: -10px;
                        }

                    .message ul li.msg-left small {
                        float: right;
                        color: #c1c1c1;
                        margin-right: 20px;
                        position: absolute;
                        bottom: 4px;
                        right: 0;
                        opacity: 80%;
                    }

                .message ul li.msg-right {
                    float: right;
                    max-width: 250px;
                }


                    .message ul li.msg-right .msg-desc {
                        margin-right: 25px;
                        margin-left: 10px;
                        font-size: 14px;
                        background: #007AFF;
                        color: #fff;
                        padding: 10px 60px 10px 15px;
                        border-radius: 5px 5px 5px 0px;
                        position: relative;
                        line-height: 1.3;
                    }

                        .message ul li.msg-right .msg-desc:before {
                            position: absolute;
                            content: '';
                            border: 10px solid transparent;
                            border-bottom-color: #007AFF;
                            bottom: 0px;
                            right: -10px;
                        }

                    .message ul li.msg-right small {
                        float: right;
                        color: #c1c1c1;
                        margin-right: 35px;

                        position:absolute;
                        bottom:4px;
                        right:0;
                        color:#fff;
                        opacity:50%;
                    }

                .message ul li.msg-day {
                    border-top: 1px solid #EBEBEB;
                    width: 100%;
                    padding: 0px;
                    margin: 15px 0px;
                }

                    .message ul li.msg-day small {
                        position: absolute;
                        top: -10px;
                        background: #F6F6F6;
                        color: #c1c1c1;
                        padding: 3px 10px;
                        left: 50%;
                        transform: translateX(-50%);
                    }

    .right-section-bottom {
        background: #fff;
        width: 100%;
        padding: 15px;
        position: absolute;
        bottom: 0px;
        border-top: 1px solid #E6E6E6;
        text-align: center;
    }

        .right-section-bottom input {
            border: 0px;
            padding: 8px 5px;
            width: calc(100% - 150px);
        }

        .right-section-bottom .btn-send {
            border: 0px;
            padding: 8px 10px;
            float: right;
            margin-right: 30px;
            color: #009EF7;
            font-size: 18px;
            background: #fff;
            cursor: pointer;
        }

    .upload-btn {
        position: relative;
        overflow: hidden;
        display: inline-block;
        float: left;
    }

        .upload-btn .btn {
            border: 0px;
            padding: 8px 10px;
            color: #009EF7;
            font-size: 18px;
            background: #fff;
            cursor: pointer;
        }

        .upload-btn input[type=file] {
            font-size: 100px;
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
        }

    .defaultChat {
        text-align: center;
        margin-top: 130px;
    }

    .defaultChat div {
        font-size:1.5em;
        font-weight:300;
        margin:20px;
    }

    .defaultChat img {
        width:250px;
        height:auto;
    }

    #messageInput {
        border-radius:10px;
        padding-left:10px;
    }
</style>




<div class="main-section d-flex justify-content-center" style="background-color:transparent;">
    <div class="left card">
        <div class="head-section">
            <div class="headLeft-section">
                <div class="headLeft-sub">
                    <div class="card-title fw-bold" style="margin:10px;">Users</div>
                </div>
            </div>
        </div>
        <div class="body-section">
            <div class="left-section mCustomScrollbar" data-mcs-theme="minimal-dark">
                <div style="text-align:center; margin-bottom:10px;">
                    <input type="text" name="search" placeholder="Search...">
                    <button> <i class="fa fa-search"></i></button>
                </div>
                
                <ul id="chatUser">
                    @{ foreach (var user in Model.allmessages)
                        {
                            if (user.Key == "ISRChat")
                            {
                                <li id="ISRChat" onclick="changeChat(this, 'ISRChat')">
                                    <div class="chatList">
                                        <div class="desc">
                                            <small class="time">05:30 am</small>
                                            <h5>IT Support</h5>
                                            <small>...</small>
                                        </div>
                                    </div>
                                </li>
                            }
                            else
                            {
                                <li id="@user.Key" onclick="changeChat(this, '@user.Key')">
                                    <div class="chatList">
                                        <div class="desc">
                                            <small class="time">05:30 am</small>
                                            <h5>@Model.allusers[user.Key].Fullname</h5>
                                            <small></small>
                                        </div>
                                    </div>
                                </li>
                            }

                        } }

                    @{ if (HttpContext.Session.GetString("ChatUser") != null)
                        {
                            if (!Model.allmessages.ContainsKey(HttpContext.Session.GetString("ChatUser")))
                            {
                                <li id="@HttpContext.Session.GetString("ChatUser")" onclick="changeChat(this, '@HttpContext.Session.GetString("ChatUser")')">
                                    <div class="chatList">
                                        <div class="desc">
                                            <small class="time">05:30 am</small>
                                            <h5>@HttpContext.Session.GetString("ChatUserName")</h5>
                                            <small></small>
                                        </div>
                                    </div>
                                </li>
                            }
                        }

                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="right card d-flex align-content-between">
        <div class="head-section">
            <div class="headRight-section">
                <div class="headRight-sub">
                    <h3></h3>
                    <small></small>
                </div>
            </div>
        </div>
        <div class="body-section">
            <div class="right-section">
                <div class="message wholeChat" data-mcs-theme="minimal-dark">
                    <ul id="messageList" class="test showActive " style="overflow:hidden;">
                        <li style="">
                            @{ if (HttpContext.Session.GetString("LoginUserType") != "ITSupport")
                                {
                                    if (!Model.allmessages.ContainsKey("ISRChat") && HttpContext.Session.GetString("ChatUser") != "ISRChat")
                                    {
                                        <div class="defaultChat" style="">
                                            <img src="~/images/defaultChat.png" alt="Alternate Text" />
                                            <div>Start talking to IT Support</div>
                                            <button class="btn btn-primary startISRChat">Chat</button>
                                        </div>

                                    }
                                }
                            }
                        </li>
                    </ul>

                    @{ foreach (var user in Model.allmessages)
                        {
                            <ul id="messageList" class="@user.Key" style="display:none;">
                                @{ foreach (var msg in Model.allmessages[user.Key])
                                    {
                                        if (msg.ToUserId == HttpContext.Session.GetString("LoginUser"))
                                        {
                                            <li class="msg-left">
                                                <div class="msg-left-sub">
                                                    <div class="msg-desc">
                                                        @msg.Text
                                                    </div>
                                                    <small>@string.Concat( msg.When.ToString().Split(" ")[1].Substring(0, msg.When.ToString().Split(" ")[1].LastIndexOf(":")), msg.When.ToString().Split(" ")[2])</small>
                                                </div>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="msg-right">
                                                <div class="msg-right-sub">
                                                    <div class="msg-desc">
                                                        @msg.Text
                                                    </div>
                                                    <small>@msg.When</small>
                                                </div>
                                            </li>
                                        }
                                    } }
                            </ul> } }

                    @{ if (HttpContext.Session.GetString("ChatUser") != null)
                        {
                            if (!Model.allmessages.ContainsKey(HttpContext.Session.GetString("ChatUser")))
                            {
                                <ul id="messageList" class="@HttpContext.Session.GetString("ChatUser")">
                                </ul>
                            }

                        }

                    }
                </div>
               
                <div class="right-section-bottom">
                    <form id="chatForm" style="display:none;">
                        <div class="upload-btn">
                            <button class="btn"><i class="fa fa-photo"></i></button>
                            <input type="file" name="myfile" />
                        </div>
                        <input id="messageInput" type="text" name="" placeholder="type here...">
                        <button id="sendButton" type="button" class="btn-send"><i class="fa fa-send"></i></button>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<!-- custom scrollbar plugin -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.concat.min.js"></script>


@*
    <script src="~/js/chat.js"></script>*@

<script>
    var toUserId = "ISRChat";
    var connectId = "";

    class Message {
        constructor(username, text, when, userId, toUserId) {
            this.userName = username;
            this.text = text;
            this.when = when;
            this.Id = "";
            this.UserId = userId;
            this.ToUserId = toUserId;
        }
    }

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    //Disable the send button until connection is established.
    document.getElementById("sendButton").disabled = true;

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;

        connection.invoke("getConnectionId")
            .then(function (connectionId) {
                sessionStorage.setItem('connectionId', connectionId);
                connectId = connectionId;
            }).catch(err => console.error(err.toString()));
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = '@HttpContext.Session.GetString("LoginUserName")';
        var text = document.getElementById("messageInput").value;
        var userId = '@HttpContext.Session.GetString("LoginUser")';

        console.log("sending..." + user);

        document.getElementById("messageInput").value = "";
        let message = new Message(user, text, new Date(), userId, toUserId);
        console.log(`sending ${message} says ${message.text} at ${message.when}`);


        var li = document.createElement("li");
        var divFirst = document.createElement("div");
        var divSecond = document.createElement("div");
        var divThird = document.createElement("div");
        var small = document.createElement("small");
        li.setAttribute("class", "msg-right")
        divFirst.setAttribute("class", "msg-right")
        divSecond.setAttribute("class", "msg-right-sub")
        divThird.setAttribute("class", "msg-desc")
        li.appendChild(divFirst);
        divFirst.appendChild(divSecond);
        divSecond.appendChild(divThird);
        divSecond.appendChild(small);

        divThird.textContent = `${message.text}`;
        small.textContent = `${message.when.toLocaleString().split(" ")[1].slice(0, -3) + message.when.toLocaleString().split(" ")[2]}`;

        document.getElementsByClassName(toUserId)[0].appendChild(li);

        console.log(toUserId + message.when);

        connection.invoke("SendMessageToGroup", toUserId, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

    connection.on("ReceiveMessage", function (message) {
        console.log(message)
        console.log(`${message.userId} sends to ${message.toUserId} at ${message.when}`);

        if ('@HttpContext.Session.GetString("LoginUser")' != message.userId && '@HttpContext.Session.GetString("LoginUser")' == message.toUserId) {
            var li = document.createElement("li");
            var divFirst = document.createElement("div");
            var divSecond = document.createElement("div");
            var divThird = document.createElement("div");
            var small = document.createElement("small");

            li.setAttribute("class", "msg-left")
            divFirst.setAttribute("class", "msg-left")
            divSecond.setAttribute("class", "msg-left-sub")
            divThird.setAttribute("class", "msg-desc")

            li.appendChild(divFirst);
            divFirst.appendChild(divSecond);
            divSecond.appendChild(divThird);
            divSecond.appendChild(small);

            divThird.textContent = `${message.text}`;
            small.textContent = `${message.when.split(" ")[1].slice(0, -3) + message.when.split(" ")[2]}`;

            console.log(typeof document.getElementsByClassName(message.userId)[0]);

            if (document.getElementsByClassName(message.userId)[0] == null || typeof document.getElementsByClassName(message.userId)[0] == "undefined") {
                document.getElementById("chatUser").innerHTML += `<li id="${message.userId}" class="" onclick="changeChat(this, '${message.userId}')">
                                <div class="chatList">
                                    <div class="desc">
                                        <small class="time">3 day</small>
                                        <h5>${message.username}</h5>
                                        <small>${message.when}</small>
                                    </div>
                                </div>
                            </li>`;
                document.getElementsByClassName("wholeChat")[0].innerHTML += `<ul id="messageList" class="${message.userId}" style="display:none;"></ul>`;
                document.getElementsByClassName(message.userId)[0].appendChild(li);
            } else {
                document.getElementsByClassName(message.userId)[0].appendChild(li);

            }
        }

    });
</script>

<script>
    function changeChat(e, userId) {
        console.log("Changing...");
        var chat = document.getElementsByClassName(userId)[0];
        if (document.querySelector(".chatActive") != null) {
            document.querySelector(".chatActive").classList.remove("active", "chatActive");
        }
        var user = document.getElementById(userId);
        user.classList.add("chatActive", "active");

        var oldChat = document.getElementsByClassName("showActive")[0];
        oldChat.classList.remove("showActive");
        chat.classList.add("showActive");
        oldChat.style.display = "none";
        chat.style.display = "block";
        document.getElementById("chatForm").style.display = "block";

        var chatHeader = document.querySelector(".headRight-sub h3");
        chatHeader.textContent = document.querySelector(".chatActive h5").textContent;

        toUserId = userId;
        console.log(toUserId);


    }

    $(".startISRChat").on("click", function () {
        $.ajax({
            url: 'https://localhost:44311/api/User/ChatUser/ISRChat',
            type: 'GET',
            success: function (result) {
                console.log(result);
                location.reload();
            }
        });
    });

    @*$(document).ready(function () {
        var userId = @HttpContext.Session.GetString("ChatUser");
        if (userId != null) {
            $.ajax({
                url: 'https://localhost:44311/api/User/GetName/' + userId,
                type: 'GET',
                success: function (result) {
                    console.log("Items retrieve successfully")
                    console.log(JSON.parse(result));

                    $(`.${userId} `)
                }
            });
        }

    });*@


</script>